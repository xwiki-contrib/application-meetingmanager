<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
  <web>MMCode</web>
  <name>MeetingMinutes</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent/>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1288566000000</creationDate>
  <date>1288566000000</date>
  <contentUpdateDate>1288566000000</contentUpdateDate>
  <version>1.1</version>
  <title>MeetingMinutes</title>
  <template/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>false</hidden>
  <object>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>MMCode.MeetingMinutes</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>203bfe23-6106-43e4-ad6e-de7a5dd210ef</guid>
    <property>
      <cache>default</cache>
    </property>
    <property>
      <code>(function(){

var editorMinutes;
var editorTasks;

document.observe("dom:loaded", function(){
   if ($('editmeetingminutes')) {
     $('editmeetingminutes').observe("click", function(){
        $('minutesedit').toggleClassName('hidden');
        if (!$('minutesedit').hasClassName('hidden') &amp;&amp; typeof editorMinutes == "undefined") {
          editorMinutes = new WysiwygEditor(meetingMinutesEditorConfig);
        }
     });
     $('saveminutes').observe("click", saveMinutes);
     $('saveminutesandclose').observe("click", function(){
        saveMinutes();
        $('minutesedit').addClassName('hidden');
     });
   }
});

function saveMinutes(){
 saveMinutes2("$!{services.csrf.token}");
}

function saveMinutes2(formToken){
    var url = XWiki.getActionURL(XWiki.currentSpace, XWiki.currentDocument, "save", 0);
    var args = {"ajax":"1", "form_token" : formToken };
    editorMinutes.getSourceText(function(text){
      args["MMCode.MeetingClass_0_minutes"] = text;
      $('minutesview').innerHTML = "&lt;br /&gt;";
      $('minutesview').addClassName("loading");
      var ajx = new Ajax.Request(url, {
        method:"post",
        parameters: args,
        onComplete:function(transport) {
          if (transport.responseText=="") {
           var savedMsg = new Element("div",{'class':'infomessage'}).update("$msg.get('meetings.meeting.minutes.saved')");
           $('minutesview').insert({before: savedMsg});
           setTimeout(function() { savedMsg.remove();}, 3000);
           var viewURL = "$xwiki.getURL('MMCode.MeetingMinutes','view','xpage=plain&amp;type=minutes')&amp;meeting=" + XWiki.currentSpace + "." + XWiki.currentDocument;
           var ajx2 = new Ajax.Request(viewURL, {
             onComplete: function(transport) {
                $('minutesview').removeClassName("loading");
                $('minutesview').innerHTML = transport.responseText;
             }
           });
          } else {
             alert("Failed (probably CSRF)");
             // some work needed here to resubmit with the right token
          }
        }
      });
    });
}

document.observe("dom:loaded", function(){
   if ($('editmeetingtasks')) {
     $('editmeetingtasks').observe("click", function(){
        $('tasksedit').toggleClassName('hidden');
        if (!$('tasksedit').hasClassName('hidden') &amp;&amp; typeof editorTasks == "undefined") {
           editorTasks = new WysiwygEditor(meetingTasksEditorConfig);
        }
     });
     $('savetasks').observe("click", saveTasks);
     $('savetasksandclose').observe("click", function(){
        saveTasks();
        $('tasksedit').addClassName('hidden');
     });
   }
});
function saveTasks(){
 saveTasks2("$!{services.csrf.token}");
}

function saveTasks2(formToken){
    var url = XWiki.getActionURL(XWiki.currentSpace, XWiki.currentDocument, "save", 0);
    $('tasksview').innerHTML = "&lt;br /&gt;";
    $('tasksview').addClassName("loading");
    editorTasks.getSourceText(function(text) {
      var args = {"ajax":"1", "form_token" : formToken, "MMCode.MeetingClass_0_tasks": text};
      var ajx = new Ajax.Request(url, {
        method:"post",
        parameters: args,
        onComplete:function(transport) {
         if (transport.responseText=="") {
          var savedMsg = new Element("div",{'class':'infomessage'}).update("$msg.get('meetings.meeting.tasks.saved')");
          $('tasksview').insert({before: savedMsg});
          setTimeout(function() { savedMsg.remove();}, 3000);
          var viewURL = "$xwiki.getURL('MMCode.MeetingMinutes','view','xpage=plain&amp;type=tasks')&amp;meeting=" + XWiki.currentSpace + "." + XWiki.currentDocument;
          var ajx2 = new Ajax.Request(viewURL, {
             onComplete: function(transport) {
                $('tasksview').removeClassName("loading");
                $('tasksview').innerHTML = transport.responseText;
             }
          });
         } else {
             alert("Failed (probably CSRF)");
             // some work needed here to resubmit with the right token
         }
        }
      });
   });
}

})();</code>
    </property>
    <property>
      <name>minutes</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <content>{{velocity filter="none"}}
{{html clean="false" wiki="true"}}
#wysiwyg_import(false)
#set($ok = $xwiki.jsx.use('MMCode.MeetingMinutes'))
#if("$!request.type" == "" || "$!request.type" == "minutes")
  #if("$!request.xpage" == "")
&lt;h2 class="meetingh2"&gt;
$msg.get('meetings.meeting.minutes')
&lt;/h2&gt;
&lt;div id="meetingminutes"&gt;
 &lt;div id="editmeetingminutes"&gt;$msg.get('meetings.meeting.minutes.edit')&lt;/div&gt;
  &lt;div id="meetingminutescontent"&gt;
    #if($request.started=="1")
     #info("$msg.get('meetings.meeting.startmeeting.started')")
    #end
    &lt;div id="minutescontent"&gt;
      &lt;div id="minutesedit" class="hidden editableInfos"&gt;
        &lt;div id="minuteseditcontent" class=""&gt;
          $!meeting.display("minutes", "edit")
          ## Set the input value for the editor.
          {{html wiki="false"}}
## Define the map of parameters to be used to configure the WYSIWYG editor.
#set($parameters = $util.hashMap)
##set($ok = $parameters.put("hookId", "MMCode.MeetingClass_0_minutes"))
## Store the default WYSIWYG editor configuration parameters in the $parameters map.
#wysiwyg_storeConfig($parameters $meetingDoc "MMCode.MeetingClass_0_minutes" false)
## The following line adds the inputURL parameter to $parameters map.
##wysiwyg_editPropertyCustom($meetingDoc, $parameters)
## At this point you can customize the default WYSIWYG editor configuration parameters.
##set($ok = $parameters.put('parameterName', 'parameterValue'))
## Write the $parameters map to a JavaScript variable.
#wysiwyg_writeConfig("meetingMinutesEditorConfig" $parameters)
          {{/html}}
        &lt;/div&gt;
        &lt;span class="buttonwrapper"&gt;
          &lt;button id="saveminutes"&gt;$msg.get('meetings.meeting.saveminutes')&lt;/button&gt;
          &lt;button id="saveminutesandclose"&gt;$msg.get('meetings.meeting.saveminutesandclose')&lt;/button&gt;
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div id="minutesview"&gt;
  #else
    #set($meetingDoc = $xwiki.getDocument($request.meeting))
    #set($meeting = $meetingDoc.getObject("MMCode.MeetingClass"))
  #end
  #if("$!meeting.getProperty('minutes').value" == "")
    #warning("$msg.get('meetings.meeting.minutes.empty')")
  #else
    $meeting.display('minutes', 'view')
  #end
  #if("$!request.xpage" == "")
    &lt;/div&gt; 
   &lt;/div&gt;
  &lt;/div&gt;
 &lt;/div&gt;
  #end
#end
#if("$!request.type" == "" || "$!request.type" == "tasks")
  #if("$!request.xpage" == "")
&lt;h2 class="meetingh2"&gt;
$msg.get('meetings.meeting.tasks')
&lt;/h2&gt;
&lt;div id="meetingtasks"&gt;
&lt;div id="editmeetingtasks"&gt;$msg.get('meetings.meeting.tasks.edit')&lt;/div&gt;
 &lt;div id="meetingtaskscontent"&gt;
  &lt;div id="taskscontent"&gt;
    &lt;div id="tasksedit" class="hidden editableInfos"&gt;
      &lt;div id="taskseditcontent" class=""&gt;
          $meeting.display("tasks", "edit")
          {{html wiki="false"}}
## Define the map of parameters to be used to configure the WYSIWYG editor.
#set($parameters = $util.hashMap)
## Store the default WYSIWYG editor configuration parameters in the $parameters map.
#wysiwyg_storeConfig($parameters $meetingDoc "MMCode.MeetingClass_0_tasks" false)
## The following line adds the inputURL parameter to $parameters map.
##wysiwyg_inputProperty($meetingDoc "MMCode.MeetingClass_0_tasks", $parameters)
## At this point you can customize the default WYSIWYG editor configuration parameters.
##set($ok = $parameters.put('parameterName', 'parameterValue'))
## Write the $parameters map to a JavaScript variable.
#wysiwyg_writeConfig("meetingTasksEditorConfig" $parameters)
           {{/html}}
      &lt;/div&gt;
      &lt;span class="buttonwrapper"&gt;
        &lt;button id="savetasks"&gt;$msg.get('meetings.meeting.savetasks')&lt;/button&gt;
        &lt;button id="savetasksandclose"&gt;$msg.get('meetings.meeting.savetasksandclose')&lt;/button&gt;
      &lt;/span&gt;
    &lt;/div&gt;
    &lt;div id="tasksview"&gt;
  #else
    #set($meetingDoc = $xwiki.getDocument($request.meeting))
    #set($meeting = $meetingDoc.getObject("MMCode.MeetingClass"))
  #end
  #if("$!meeting.getProperty('tasks').value" == "")
    #warning("$msg.get('meetings.meeting.tasks.empty')")
  #else
    $meeting.display('tasks', 'view')
  #end
  #if("$!request.xpage" == "")
    &lt;/div&gt; 
   &lt;/div&gt;
  &lt;/div&gt;
 &lt;/div&gt;
  #end
#end
{{/html}}
{{/velocity}}</content>
</xwikidoc>
